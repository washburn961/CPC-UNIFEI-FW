#pragma once

const char gocbref[] = "SE0110OC501CFG/LLN0$GO$AA3SE0110OC501G5";
const char tatl[] = {
	0x07,
	0xd0
};

const char dataset[] = "SE0110OC501CFG/LLN0$AA3SE0110OC501G5";
const char goid[] = "BOA NOITE DO CPC UNIFEI GOOSE";
const char t[] = {
	0x66,
	0xec,
	0x9b,
	0xed,
	0x68,
	0x8c,
	0xc0,
	0xbf
};
const char stnum[] = {
	0x01
};
const char sqnum[] = {
	0x02,
	0x7d,
	0x90
};
const char simulation[] = {
	0x00
};
const char confrev[] = {
	0x01
};
const char ndscon[] = {
	0x00
};
const char numdatasetentries[] = {
	0x04
};
const char alldata[] = {
	0x83,
	0x01,
	0x00,
	0x83,
	0x01,
	0x00,
	0x83,
	0x01,
	0x00,
	0x83,
	0x01,
	0x00
};




const char packet_bytes[] = {
	0x00,
	0x00,// estava 0x05 no arquivo do RELE mas na norma fala 0x00 para tipo 1 e 0x01 para tipo 1A
	0x00,
	0xa5,
	0x00,
	0x00,
	0x00,
	0x00,
	0x61, // o que e issoo
	0x81, // o que e issoo
	0x9a, // o que e issoo
	0x80, // tipo (gocbref)
	0x27, // tamanho em bytes
	0x53,
	0x45,
	0x30,
	0x31,
	0x31,
	0x30,
	0x4f,
	0x43,
	0x35,
	0x30,
	0x31,
	0x43,
	0x46,
	0x47,
	0x2f,
	0x4c,
	0x4c,
	0x4e,
	0x30,
	0x24,
	0x47,
	0x4f,
	0x24,
	0x41,
	0x41,
	0x33,
	0x53,
	0x45,
	0x30,
	0x31,
	0x31,
	0x30,
	0x4f,
	0x43,
	0x35,
	0x30,
	0x31,
	0x47,
	0x35,
	0x81,
	0x02,
	0x07,
	0xd0,
	0x82,
	0x24,
	0x53,
	0x45,
	0x30,
	0x31,
	0x31,
	0x30,
	0x4f,
	0x43,
	0x35,
	0x30,
	0x31,
	0x43,
	0x46,
	0x47,
	0x2f,
	0x4c,
	0x4c,
	0x4e,
	0x30,
	0x24,
	0x41,
	0x41,
	0x33,
	0x53,
	0x45,
	0x30,
	0x31,
	0x31,
	0x30,
	0x4f,
	0x43,
	0x35,
	0x30,
	0x31,
	0x47,
	0x35,
	0x83,
	0x1a,
	0x41,
	0x41,
	0x33,
	0x41,
	0x4c,
	0x30,
	0x32,
	0x48,
	0x30,
	0x31,
	0x53,
	0x45,
	0x30,
	0x31,
	0x31,
	0x30,
	0x31,
	0x30,
	0x4f,
	0x43,
	0x35,
	0x30,
	0x31,
	0x47,
	0x30,
	0x35,
	0x84,
	0x08,
	0x66,
	0xec,
	0x9b,
	0xed,
	0x68,
	0x8c,
	0xc0,
	0xbf,
	0x85,
	0x01,
	0x01,
	0x86,
	0x02,
	0x04,
	0x89,
	0x87,
	0x01,
	0x00,
	0x88,
	0x01,
	0x01,
	0x89,
	0x01,
	0x00,
	0x8a,
	0x01,
	0x04,
	0xab,
	0x0c,
	0x83,
	0x01,
	0x01,
	0x83,
	0x01,
	0x00,
	0x83,
	0x01,
	0x01,
	0x83,
	0x01,
	0x00
};